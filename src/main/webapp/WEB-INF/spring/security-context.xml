<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">
		
	<bean id="customAccessDenied" class="com.homegym.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess" class="com.homegym.security.CustomLoginSuccessHandler"></bean>
<!-- 	<bean id="customPasswordEncoder" class="com.homegym.security.CustomNoOpPasswordEncoder"></bean> -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	
	<security:http>
		<security:intercept-url pattern="/sample/all" access="permitAll" />
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
		
		<!-- <security:access-denied-handler error-page="/accessError" /> -->
		<security:access-denied-handler ref="customAccessDenied"/>
			
		<!-- <security:form-login /> -->
		<security:form-login login-page="/user/login" authentication-success-handler-ref="customLoginSuccess" />
		<security:logout logout-url="/customLogout" invalidate-session="true"/>
	</security:http>
	 
	<security:authentication-manager>
		<security:authentication-provider>
		<!-- <security:jdbc-user-service data-source-ref="dataSource" /> -->
		<security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select m_id, memberId, password, name, nickname, phone, zip_code, address, image, birth, gender, enabled from member where memberId = ?;"
																authorities-by-username-query="select m_id, memberId, auth from member_auth where memberId = ?" />
	
		<!-- <security:password-encoder ref="customPasswordEncoder" /> -->
		<security:password-encoder ref="bcryptPasswordEncoder" />
		<!-- <security:user-service>
			<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
			<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
		</security:user-service> -->
		</security:authentication-provider>
	</security:authentication-manager>
</beans>